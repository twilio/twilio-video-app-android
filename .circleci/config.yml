version: 2.17.3

aliases:
  # Workspace
  - &workspace
      ~/twilio-video-app-android

  - &gradle-cache-key
    key: jars-{{ checksum "build.gradle" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
  - &restore-cache-gradle
    <<: *gradle-cache-key
    name: Restore Gradle Cache
  - &save-cache-gradle
    <<: *gradle-cache-key
    name: Save Gradle Cache
    paths:
      - ~/.gradle/caches
      - ~/.gradle/wrapper
  - &get-secrets
    name: Setup google services
    command: |
      # Internal debug google services
      mkdir -p app/src/internal/debug || true
      echo $GOOGLE_SERVICES_INTERNAL_DEBUG_JSON | base64 -di > app/src/internal/debug/google-services.json
      # Internal release google services
      mkdir -p app/src/internal/release || true
      echo $GOOGLE_SERVICES_INTERNAL_RELEASE_JSON | base64 -di > app/src/internal/release/google-services.json
      # Twilio release google services
      mkdir -p app/src/twilio/release || true
      echo $GOOGLE_SERVICES_TWILIO_RELEASE_JSON | base64 -di > app/src/twilio/release/google-services.json
      # Gradle Properties
      mkdir -p ~/.gradle
      mkdir -p $PWD/secrets
      echo $VIDEO_APP_KEYSTORE | base64 -d > $PWD/secrets/android.keystore
      echo "androidKeystore=$PWD/secrets/android.keystore" >> ~/.gradle/gradle.properties
      echo "androidKeystorePassword=$VIDEO_APP_KEYSTORE_PASSWORD" >> ~/.gradle/gradle.properties
      echo "androidReleaseKeyAlias=$VIDEO_APP_RELEASE_KEY_ALIAS" >> ~/.gradle/gradle.properties
      echo "androidReleaseKeyPassword=$VIDEO_APP_RELEASE_KEY_PASSWORD" >> ~/.gradle/gradle.properties
      echo "org.gradle.jvmargs=-Xmx4608m" >> ~/.gradle/gradle.properties

  # Containers
  - &build-defaults
    working_directory: *workspace
    docker:
      - image: circleci/android:api-28-node
    environment:
      - _JAVA_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"

  - &ui-test-defaults
    working_directory: *workspace
    docker:
      - image: google/cloud-sdk:latest
    environment:
    resource_class: medium+

  - &gcloud-auth
    name: Google Cloud Auth
    command: >
      echo $GCP_KEY | base64 -d | gcloud auth activate-service-account --key-file=-

jobs:
  build-app:
    <<: *build-defaults
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - restore-cache: *restore-cache-gradle
      - run: *get-secrets
      - run:
          name: Store Test Credentials
          command: echo $TEST_CREDENTIALS_JSON | base64 -di > app/src/androidTest/assets/Credentials/TestCredentials.json
      - run:
          name: Build App
          command: ./gradlew -q app:assemble app:assembleAndroidTest
      - persist_to_workspace:
          root: .
          paths:
            - app/build
      - save-cache: *save-cache-gradle

  unit-tests:
    <<: *build-defaults
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - restore-cache: *restore-cache-gradle
      - run: *get-secrets
      - run:
          name: Unit Tests
          command: ./gradlew app:testInternalDebugUnitTest
      - save-cache: *save-cache-gradle

  ui-tests:
    <<: *ui-test-defaults
    steps:
      # Setup
      - checkout
      - attach_workspace:
          at: *workspace
      - run: *gcloud-auth
      # Execute tests
      - run:
          name: UI Tests
          command: >
            gcloud firebase test android run --no-record-video --project video-app-79418
            ui-test-args.yaml:ui-tests

  publish-to-appcenter:
    <<: *build-defaults
    resource_class: medium+
    name: Publish to AppCenter
    steps:
      - attach_workspace:
          at: *workspace
      - run:
          # TODO Ticket to improve build time here https://issues.corp.twilio.com/browse/AHOYAPPS-67
          # TODO Ticket to add latest changelog update https://issues.corp.twilio.com/browse/AHOYAPPS-94
          command: |
            sudo npm install webpack
            echo no | sudo npm install -g appcenter-cli
            appcenter login --token $APPCENTER_API_TOKEN
            appcenter distribute release -f app/build/outputs/apk/internal/release/app-internal-release.apk -g Collaborators --app nico-hokeyapp-dzyz/Video-App-Internal

workflows:
  version: 2

  build-test-publish:
    jobs:
      - build-app
      - unit-tests:
          requires:
            - build-app
      - ui-tests:
          requires:
            - build-app
      - publish-to-appcenter:
          requires:
            - build-app
            - unit-tests
            - ui-tests
          filters:
            branches:
              only: master