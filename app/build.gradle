apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    lintOptions {
        warningsAsErrors true
        // TODO: Fix all baseline app warnings and errors GSDK-1984
        baseline file("lint-baseline.xml")
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
    }

    defaultConfig {
        applicationId "com.twilio.video.app"

        minSdkVersion 16
        targetSdkVersion 28

        versionName "0.1.0"
        versionCode 1

        vectorDrawables.useSupportLibrary = true

        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    signingConfigs {
        release {
            storeFile file(keystore)
            storePassword keystorePassword
            keyAlias releaseKeyAlias
            keyPassword releaseKeyPassword
        }
        debug {
            storeFile file('video-android-app.keystore')
            storePassword 'android'
            keyAlias 'debug'
            keyPassword 'android'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            signingConfig signingConfigs.debug
        }
    }

    flavorDimensions "environment"

    productFlavors {
        internal {
            dimension "environment"
            applicationId "com.twilio.video.app.internal"
            buildConfigField 'String', 'TOPOLOGY_DEFAULT', '"group"'
            buildConfigField 'String', 'ENVIRONMENT_DEFAULT', '"production"'
        }

        twilio {
            dimension "environment"
            buildConfigField 'String', 'TOPOLOGY_DEFAULT', '"group"'
            buildConfigField 'String', 'ENVIRONMENT_DEFAULT', '"production"'
        }

        community {
            dimension "environment"
            applicationId "com.twilio.video.app.community"
            buildConfigField 'String', 'TOPOLOGY_DEFAULT', '"peer-to-peer"'
            buildConfigField 'String', 'ENVIRONMENT_DEFAULT', '"production"'
            buildConfigField("String",
                    "TWILIO_ACCESS_TOKEN",
                    "\"${getLocalProperty("TWILIO_ACCESS_TOKEN")}\"")
        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name

        // Ignore twilio debug and community release builds
        if ((names.contains("twilio") && variant.buildType.name == "debug") ||
                (names.contains("community") && variant.buildType.name == "release")) {
            setIgnore(true)
        }
    }
}

dependencies {
    def butterknife = '10.2.0'
    def dagger = '2.15'
    def retrofit = '2.1.0'
    implementation 'com.twilio:twilio-android-env:1.0.0'
    implementation "com.twilio:video-android:5.0.0"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation "com.appyvet:materialrangebar:1.3"
    implementation "com.jakewharton:butterknife:$butterknife"
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation "com.google.firebase:firebase-core:17.2.1"
    implementation 'com.google.firebase:firebase-auth:19.1.0'
    implementation "com.crashlytics.sdk.android:crashlytics:2.10.1"
    implementation 'com.google.android.gms:play-services-auth:17.0.0'

    implementation "com.google.dagger:dagger:$dagger"
    implementation "com.google.dagger:dagger-android:$dagger"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger"

    implementation "io.reactivex.rxjava2:rxjava:2.2.10"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit"

    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0"
    testImplementation 'junit:junit:4.12'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    testImplementation 'org.robolectric:robolectric:4.3'
    testImplementation 'androidx.test:core:1.2.0'


    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknife"
}

def getLocalProperty(key) {
    if (project.rootProject.file('local.properties').exists()) {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        def value = properties.getProperty(key)
        return value
    } else {
        logger.log(LogLevel.WARN, "Could not find local.properties in " +
                project.rootProject.toString() + ". Community variant cannot connect to room" +
                " without credentials")
    }
}

apply plugin: 'com.google.gms.google-services'
